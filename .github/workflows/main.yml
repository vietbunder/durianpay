name: Deploy Nginx to AWS EC2

on:
  push:
    branches:
      - main  # Trigger the CI/CD pipeline on push to the main branch

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    
    # Set up Docker Buildx for building multi-platform images (optional, but good practice)
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    # Build Docker image locally without pushing to a registry
    - name: Build Docker Image
      run: |
        docker build -t nginx-hello .

    # Deploy the Docker image to EC2 instance via SSH
    - name: Deploy to EC2
      uses: actions/checkout@v2
      env:
          PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          HOSTNAME: ${{secrets.SSH_HOST}}
          USER_NAME: ${{secrets.USER_NAME}}
      run: |
          echo "$PRIVATE_KEY" > private_key && chmod 600 private_key
          ssh -o StrictHostKeyChecking=no -i private_key ${USER_NAME}@${HOSTNAME} '
          # Stop and remove any existing containers
          docker stop nginx-container || true
          docker rm nginx-container || true
          # Run the new Docker image on EC2
          docker run -d --name nginx-container -p 80:80 nginx-hello



      - uses: actions/checkout@v2 
      - name: Build & Deploy
        env:
            PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
            HOSTNAME: ${{secrets.SSH_HOST}}
            USER_NAME: ${{secrets.USER_NAME}}

        run: |
          echo "$PRIVATE_KEY" > private_key && chmod 600 private_key
          ssh -o StrictHostKeyChecking=no -i private_key ${USER_NAME}@${HOSTNAME} '

              # Now we have got the access of EC2 and we will start the deploy .

          
